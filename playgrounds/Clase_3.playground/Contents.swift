import Foundation

/* T√≥picos vistos en Clase 3:
 
 -Operadores L√≥gicos
    -NOT
    -EQUAL
    -OR
 
 -Strings and Characters
    -Strings Literales
    -Strings Multil√≠nea
    -Caracteres especiales en String Literals (Unicode)
    -Delimitadores Strings
    -Inicializando un String
    -Mutabilidad de un String
    -Los String son "Tipos de Valor" (Value Types)
    -Trabajando con Caracteres
    -Concatenando Strings y Caracteres
    -Interpolaci√≥n de Strings
    -Unicode
 
 */

// Ejercicios sobre Clase 3 ü§ì

/// Operadores L√≥gicos

/* Operador NOT (!) */
let encendido: Bool = false
// 1.Cambiar el valor de la constante "encendido" a "true" usando el operador NOT
// ‚úçÔ∏è
let estaSoleado = true
// 2.Cambiar el valor de la constante "estaSoleado" a "false" usando el operador NOT
// ‚úçÔ∏è

// 3.En este condicional:
// qu√© sentencia se ejectur√° y porqu√©?
if !estaSoleado {
    print("Est√° nublado")
} else {
    print("Est√° soleado")
}

/* Operador AND (&&) */
// 4.El valor de qu√© constante deber√≠a cambiar para que se cumpla la condici√≥n y se ejecute el print del condicional?
let esDomingo = true
let estaLloviendo = false

if estaSoleado && estaLloviendo {
    print("Dormir la siesta")
}

// 5.TODO: Declarar dos constantes y un condicional que ejecute un print con un mensaje si ambas son ciertas
// ‚úçÔ∏è

/* Operador OR (||) */
// 6.TODO: Declarar dos constantes y un condicional que ejecute un print con un mensaje si alguna de las dos es cierta
// ‚úçÔ∏è

// 7.TODO: Evaluar el estado de 3 constantes usando los operadores AND y OR
// Ejemplo:
let constanteUno: Bool = false
let constanteDos: Bool = false
let constanteTres: Bool = false

if constanteUno && constanteDos || constanteTres {
    print("Es cierto!")
} else {
    print("No es cierto")
}

// 8.Escribir ahora uno similar al anterior pero que ejecute la rama "true"
//  ‚úçÔ∏è


/// Strings & Characters

//-Strings Literales
//-Strings Multil√≠nea
//-Caracteres especiales en String Literals (Unicode)
//-Delimitadores de Strings
//-Inicializando un String
//-Mutabilidad de un String
//-Los String son "Tipos de Valor" (Value Types)
//-Trabajando con Caracteres
//-Concatenando Strings y Caracteres
//-Interpolaci√≥n de Strings
//-Unicode

// 9.Declarar 6 strings literales
//  ‚úçÔ∏è

// 10.Declarar 3 strings multil√≠nea
//  ‚úçÔ∏è

// 11. Investigar: ¬øC√≥mo hacer para aplicar tabulaci√≥n en un string multil√≠nea?
// Dar 2 ejemplos
// Ref: https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html

// 12. ¬øQu√© tipos de "caracteres especiales" podemos incluir dentro de un string literal? (son 2)
// Dar 2 ejemplos de cada uno ‚úçÔ∏è
// Ref: https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html

// 13.¬øPara qu√© sirven los "delimitadores de strings"?
// Dar 3 ejemplos de uso ‚úçÔ∏è

// 14.¬øDe qu√© dos formas podemos inicializar un string?
// Dar 3 ejemplos de cada una de estas formas ‚úçÔ∏è

// 15.¬øMediante qu√© operador podemos concatenar un string con otro?
// Dar 3 ejemplos ‚úçÔ∏è

// 16.¬øMediante qu√© mecanismo podemos acceder a cada uno de los miembros de un string? (es decir, a cada uno de los caracteres que lo conforman)
// Usar este mecanismo recorriendo 2 strings diferentes ‚úçÔ∏è

// 17. Dar 3 ejemplos de c√≥mo concatenar string y caracteres
// ‚úçÔ∏è

// 18. Dar 4 ejemplos de c√≥mo interpolar un string
// a) interpol√°ndole una constante
// b) interpol√°ndole una variable
// c) interpol√°ndole una expresi√≥n
// d) usando en la interpolaci√≥n un delimitador
// ‚úçÔ∏è

// 19. Invocar caracteres Unicode con la sint√°xis "\u{CODIGO}"
// Declarar 4 constantes que almacenen caracteres que no sean ni letras ni n√∫meros. Imprimirlos en consola.
// Ref: https://unicode-table.com/es/
// Ejemplo:
let precomposed: Character = "\u{D55C}"
// ‚úçÔ∏è

