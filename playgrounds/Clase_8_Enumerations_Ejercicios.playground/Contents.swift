import Foundation

/*  Pr√°ctica sobre "Enumerations" üèãÔ∏è‚Äç‚ôÄÔ∏è  */

// Ejercicios

/* ****************************************************** */
// 01. Definir una enumeraci√≥n
/* ****************************************************** */

// Definir una enumeraci√≥n con 5 casos (o valores) relacionados
// ‚úçÔ∏è
// Crear una variable que "apunte" a uno de los casos de la enumeraci√≥n
// ‚úçÔ∏è
// Imprimir en un string literal interpolado el caso (el valor) de la enumeraci√≥n
// ‚úçÔ∏è


/* ****************************************************** */
// 02. Aplicarle un switch a una enumeraci√≥n
/* ****************************************************** */

// Definir una enumeraci√≥n con 4 casos
// ‚úçÔ∏è
// Crear una variable que "apunte" a uno de los casos de la enumeraci√≥n
// ‚úçÔ∏è
// Aplicarle un switch a esta variable e implementar para cada caso un mensaje a imprimir
// ‚úçÔ∏è
// Cambiar el valor de la variable de modo que el switch ejecute el print que le corresponde a ese caso
// ‚úçÔ∏è


/* ************************************************************** */
// 03. Iterando sobre los casos (los valores) de una enumeraci√≥n
/* ************************************************************** */

// Definir una nueva enumeraci√≥n y conformarla al protocolo "CaseIterable"
// ‚úçÔ∏è

// Contar cuantos casos tiene la enumeraci√≥n
// ‚úçÔ∏è

// Imprimir un mensaje informando esto
// ‚úçÔ∏è

// Mediante un switch, recorrer todos los casos de la enumeraci√≥n e imprimirlos
// ‚úçÔ∏è

/* ************************************************************** */
// 04. Valores Brutos (Raw Values)
/* ************************************************************** */

// Definir una enumeraci√≥n que contenga tres casos de tipo Int
// ‚úçÔ∏è

// Asignarle a cada caso un Int literal como valor de inicio
// ‚úçÔ∏è

// Almacenar los tres casos en tres consantes
// ‚úçÔ∏è

// Definir una consante llamada "resultadoMultiplicacion" donde, mediante una expresi√≥n, multiplicaremos los valores de las 3 constantes anteriormente definidas
// ‚úçÔ∏è

// Imprimir el resultado
// ‚úçÔ∏è

// Hacer que la enumeraci√≥n pueda iterarse
// ‚úçÔ∏è

// Iterar la enumeraci√≥n imprimiendo el valor (raw value) de cada caso
// ‚úçÔ∏è
